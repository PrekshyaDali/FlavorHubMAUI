<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="FlavorHub.Views.Authentication.Register"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:FlavorHub.Views.Controls"
    xmlns:converter="clr-namespace:FlavorHub.Converters"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:vm="clr-namespace:FlavorHub.ViewModel"
    x:DataType="vm:RegisterViewModel">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converter:BooleanAndConverter x:Key="BooleanAndConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <!--  Background Image  -->
    <VerticalStackLayout
        Padding="20"
        HorizontalOptions="FillAndExpand"
        Spacing="10"
        VerticalOptions="FillAndExpand">
        <Image HeightRequest="150" Source="flavorhub_black.svg" />
        <controls:ActivityIndicatorContentView IsLoading="{Binding IsBusy}" />
        <VerticalStackLayout Margin="0,0,0,15" Spacing="15">
            <Label
                Style="{StaticResource Header}"
                Text="Register"
                VerticalOptions="Center" />
            <Label Text="Your culinary journey starts hereâ€”let's share our flavors!" />
        </VerticalStackLayout>

        <Border
            Padding="10"
            BackgroundColor="{AppThemeBinding Light={StaticResource LightSecondaryColor},
                                              Dark={StaticResource DarkSecondaryColor}}"
            HeightRequest="80"
            StrokeShape="RoundRectangle 10"
            StrokeThickness="0">
            <Entry
                HorizontalOptions="FillAndExpand"
                Keyboard="Text"
                Placeholder="Enter Username"
                Text="{Binding RegisterModel.UserName}"
                TextColor="Red">
                <Entry.Behaviors>
                    <toolkit:MultiValidationBehavior x:Name="UsernameValidation" Flags="ValidateOnUnfocusing,ValidateOnValueChanged">
                        <toolkit:CharactersValidationBehavior toolkit:MultiValidationBehavior.Error="Please enter an alphanumeric username of 2-15 characters." RegexPattern="^[a-zA-Z0-9]{2,15}$" />
                    </toolkit:MultiValidationBehavior>
                </Entry.Behaviors>
            </Entry>
        </Border>

        <Label
            FontSize="12"
            IsVisible="{Binding Source={x:Reference UsernameValidation}, Path=IsValid, Converter={toolkit:InvertedBoolConverter}}"
            Text="{Binding Source={x:Reference UsernameValidation}, Path=Errors[0]}"
            TextColor="Red" />

        <Border
            Padding="10"
            BackgroundColor="{AppThemeBinding Light={StaticResource LightSecondaryColor},
                                              Dark={StaticResource DarkSecondaryColor}}"
            HeightRequest="80"
            StrokeShape="RoundRectangle 10"
            StrokeThickness="0">

            <Entry
                Keyboard="Text"
                Placeholder="Enter Email"
                Text="{Binding RegisterModel.Email}">
                <Entry.Behaviors>
                    <toolkit:EmailValidationBehavior x:Name="EmailValidation" Flags="ValidateOnValueChanged,ValidateOnUnfocusing" />
                </Entry.Behaviors>
            </Entry>
        </Border>

        <Label
            FontSize="12"
            IsVisible="{Binding Source={x:Reference EmailValidation}, Path=IsValid, Converter={toolkit:InvertedBoolConverter}}"
            Text="{Binding Source={x:Reference EmailValidation}, StringFormat='Please enter a valid email address.'}"
            TextColor="Red" />

        <Border
            Padding="10"
            BackgroundColor="{AppThemeBinding Light={StaticResource LightSecondaryColor},
                                              Dark={StaticResource DarkSecondaryColor}}"
            HeightRequest="80"
            StrokeShape="RoundRectangle 10"
            StrokeThickness="0">

            <Entry
                IsPassword="True"
                Keyboard="Text"
                Placeholder="Password"
                Text="{Binding RegisterModel.Password}">
                <Entry.Behaviors>
                    <toolkit:MultiValidationBehavior x:Name="PasswordValidation" Flags="ValidateOnValueChanged,ValidateOnUnfocusing">
                        <toolkit:CharactersValidationBehavior
                            x:Name="DigitValidation"
                            toolkit:MultiValidationBehavior.Error="Password must contain at least 1 digit"
                            CharacterType="Digit"
                            MinimumCharacterTypeCount="1" />
                        <toolkit:CharactersValidationBehavior
                            x:Name="UpperValidation"
                            toolkit:MultiValidationBehavior.Error="Password must contain at least 1 uppercase letter"
                            CharacterType="UppercaseLetter"
                            MinimumCharacterTypeCount="1" />
                        <toolkit:CharactersValidationBehavior
                            x:Name="SymbolValidation"
                            toolkit:MultiValidationBehavior.Error="Password must contain at least 1 symbol"
                            CharacterType="NonAlphanumericSymbol"
                            MinimumCharacterTypeCount="1" />
                        <toolkit:CharactersValidationBehavior
                            x:Name="AnyValidation"
                            toolkit:MultiValidationBehavior.Error="Password must be at least 8 characters long"
                            CharacterType="Any"
                            MinimumCharacterTypeCount="8" />
                    </toolkit:MultiValidationBehavior>
                </Entry.Behaviors>
            </Entry>
        </Border>

        <VerticalStackLayout
            Margin="0,30,0,0"
            Spacing="10"
            VerticalOptions="End">
            <Label
                FontSize="Micro"
                HorizontalTextAlignment="Center"
                Text="By registering you agree to our Terms and Conditions"
                TextColor="{StaticResource Tertiary}"
                VerticalTextAlignment="Center" />
            <Button
                BackgroundColor="{AppThemeBinding Light={DynamicResource LightPrimaryColor},
                                                  Dark={DynamicResource DarkPrimaryColor}}"
                Command="{Binding SignUpCommand}"
                Text="Register"
                TextColor="{AppThemeBinding Light={DynamicResource LightPrimaryTextColor},
                                            Dark={DynamicResource DarkPrimaryTextColor}}">
                <Button.IsEnabled>
                    <MultiBinding
                        Converter="{StaticResource BooleanAndConverter}"
                        FallbackValue="False"
                        TargetNullValue="False">
                        <Binding Path="IsValid" Source="{x:Reference UsernameValidation}" />
                        <Binding Path="IsValid" Source="{x:Reference EmailValidation}" />
                        <Binding Path="IsValid" Source="{x:Reference PasswordValidation}" />
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>
        </VerticalStackLayout>
    </VerticalStackLayout>
</ContentPage>
